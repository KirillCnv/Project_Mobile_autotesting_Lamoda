plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'qa.guru'
version '1.0'

def allureVersion = "2.19.0",
    selenideVersion = "6.9.0",
    restAssuredVersion = "5.1.1",
    appiumVersion = "8.1.1",
    assertJVersion = "3.23.1",
    junitVersion = "5.9.0",
    slf4jVersion = "1.7.32",
    ownerVersion = "1.0.4",
    commonsIoVersion = "2.11.0"

allure { report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "io.appium:java-client:$appiumVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "commons-io:commons-io:$commonsIoVersion"
    )
}

task lamodaTest(type: Test) {
    useJUnitPlatform {
        includeTags "lamoda"
    }

}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}